syntax = "proto3";

package gridmr;

option java_package = "gridmr";
option java_multiple_files = true;

// ---- Worker lifecycle ----
message WorkerRegisterRequest { string name = 1; int32 capacity = 2; }
message WorkerRegisterResponse { string worker_id = 1; int32 poll_interval_ms = 2; }

// ---- Task dispatch ----
message NextTaskRequest { string worker_id = 1; }

message MapTask {
  string task_id = 1;
  string job_id = 2;
  string input_chunk = 3;
  string map_url = 4;  // HTTP fallback
  int32  reducers = 5;
  bytes  map_script = 6; // optional
}

message ReduceTask {
  string task_id = 1;
  string job_id = 2;
  int32  partition_index = 3;
  string reduce_url = 4; // HTTP fallback
  string kv_lines = 5;
  bytes  reduce_script = 6; // optional
}

message TaskAssignment {
  bool has_task = 1;
  oneof task { MapTask map = 2; ReduceTask reduce = 3; }
}

// ---- Completion ----
message CompleteMapRequest { string worker_id = 1; string task_id = 2; string job_id = 3; string kv_lines = 4; }
message CompleteReduceRequest { string worker_id = 1; string task_id = 2; string job_id = 3; string output = 4; }

message Ack { bool ok = 1; }

// ---- Service ----
service Master {
  rpc Register       (WorkerRegisterRequest) returns (WorkerRegisterResponse);
  rpc NextTask       (NextTaskRequest)       returns (TaskAssignment);
  rpc CompleteMap    (CompleteMapRequest)    returns (Ack);
  rpc CompleteReduce (CompleteReduceRequest) returns (Ack);
}
