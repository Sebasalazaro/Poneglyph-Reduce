services:
  master:
    build: ./Road-Poneglyph
    container_name: ${MASTER_CONTAINER_NAME}
    ports:
      - "${MASTER_HTTP_PORT}:8080"
      - "${MASTER_GRPC_PORT}:50051"
    environment:
      - MQTT_BROKER=tcp://mqtt:${MQTT_PORT}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - REDIS_URL=redis://redis:${REDIS_PORT}
      - GRPC_PORT=${MASTER_GRPC_PORT}
      # AWS S3 Configuration (using .env variables)
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_S3_BASE_PATH=${AWS_S3_BASE_PATH}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    depends_on:
      - mqtt
      - redis

  worker:
    build: ./Poneglyph
    depends_on:
      - master
      - mqtt
    environment:
      PONEGLYPH_MASTER_URL: http://master:8080
      MQTT_BROKER: tcp://mqtt:${MQTT_PORT}
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      PONEGLYPH_USE_GRPC: "1"
      PONEGLYPH_MASTER_GRPC: master:${MASTER_GRPC_PORT}

  client:
    build: ./Clover
    depends_on:
      - master
      - worker
    environment:
      MASTER: http://master:8080

  dashboard:
    build: ./dashboard
    container_name: ${DASHBOARD_CONTAINER_NAME}
    ports:
      - "${DASHBOARD_PORT}:${DASHBOARD_INTERNAL_PORT}"
    depends_on:
      - mqtt
      - master
    environment:
      - VITE_MQTT_HOST=${VITE_MQTT_HOST}
      - VITE_MQTT_PORT=${VITE_MQTT_PORT}
      - VITE_MASTER_API=${MASTER_API_URL}

  mqtt:
    image: emqx
    container_name: ${MQTT_CONTAINER_NAME}
    ports:
      - "${MQTT_PORT}:1883" # MQTT
      - "${MQTT_WS_PORT}:8083" # MQTT over WebSocket
      - "${MQTT_DASHBOARD_PORT}:18083" # EMQX Dashboard
    environment:
      - EMQX_DASHBOARD__DEFAULT_USERNAME=${MQTT_USERNAME}
      - EMQX_DASHBOARD__DEFAULT_PASSWORD=${MQTT_PASSWORD}

  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME}
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data

  redisinsight:
    image: redis/redisinsight:latest
    container_name: ${REDISINSIGHT_CONTAINER_NAME}
    depends_on:
      - redis
    ports:
      - "${REDISINSIGHT_PORT}:5540"

volumes:
  redis-data:
